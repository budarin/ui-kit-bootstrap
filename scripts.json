[
    {
        "name": "test",
        "command": "jest --detectOpenHandles --no-cache  --forceExit",
        "env": {
            "NODE_ENV": "test"
        }
    },
    {
        "name": "test-watch",
        "command": "jest --watch --onlyChanged --watchman --forceExit --detectOpenHandles --notify --notifyMode=failure",
        "env": {
            "NODE_ENV": "test"
        }
    },
    {
        "name": "clean",
        "command": "lerna clean --yes && lerna exec rimraf ./lib  --parallel"
    },
    {
        "name": "build",
        "command": "lerna exec rimraf ./lib  --parallel && tsc -b packages"
    },
    {
        "name": "prepublish",
        "command": "npm run bootstrap && npm run build && prun test"
    },
    {
        "name": "upgrade",
        "command": "lerna exec npm-upgrade && npm-upgrade && check-dependencies --install && npm audit fix"
    },
    {
        "name": "bootstrap",
        "command": "lerna bootstrap --hoist"
    },
    {
        "name": "audit-fix",
        "command": "npm audit fix"
    },
    {
        "name": "pre-commit",
        "command": "sh ./config/git/git-commit-message.sh"
    },
    {
        "name": "pre-push",
        "command": "sh ./config/git/preventPushToMaster.sh && npm test"
    },
    {
        "name": "git-remove-deleted-branches",
        "command": "git fetch -p && for branch in `git branch -vv --no-color | grep ': gone]' | awk '{print $1}'`; do git branch -D $branch; done"
    }
]
